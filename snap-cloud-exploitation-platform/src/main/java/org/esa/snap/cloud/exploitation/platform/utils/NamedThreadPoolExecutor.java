package org.esa.snap.cloud.exploitation.platform.utils;

import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.ThreadFactory;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.atomic.AtomicInteger;

/**
 * Created by jcoravu on 8/2/2019.
 */
public class NamedThreadPoolExecutor extends ThreadPoolExecutor {

    public NamedThreadPoolExecutor(String poolName, int maxThreads) {
        this(maxThreads, maxThreads, 0L, TimeUnit.MILLISECONDS, poolName);
    }

    private NamedThreadPoolExecutor(int corePoolSize, int maximumPoolSize, long keepAliveTime, TimeUnit unit, final String poolName) {
        super(corePoolSize, maximumPoolSize, keepAliveTime, unit, new LinkedBlockingQueue(), new ThreadFactory() {
            private final AtomicInteger counter = new AtomicInteger();

            public Thread newThread(Runnable r) {
                String name = String.format("%s-%d", new Object[]{poolName, Integer.valueOf(this.counter.incrementAndGet())});
                return new Thread(r, name);
            }
        });
    }
}

